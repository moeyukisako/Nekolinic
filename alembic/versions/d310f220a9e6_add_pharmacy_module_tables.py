"""Add pharmacy module tables

Revision ID: d310f220a9e6
Revises: e5f84bdab6da
Create Date: 2025-06-06 15:19:18.482504

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd310f220a9e6'
down_revision: Union[str, None] = 'e5f84bdab6da'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('drug_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_drug_categories_id'), 'drug_categories', ['id'], unique=False)
    op.create_table('drug_categories_history',
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=10), nullable=False),
    sa.Column('action_timestamp', sa.DateTime(), nullable=False),
    sa.Column('action_by_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['action_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_index(op.f('ix_drug_categories_history_history_id'), 'drug_categories_history', ['history_id'], unique=False)
    op.create_index(op.f('ix_drug_categories_history_id'), 'drug_categories_history', ['id'], unique=False)
    op.create_table('drugs_history',
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=10), nullable=False),
    sa.Column('action_timestamp', sa.DateTime(), nullable=False),
    sa.Column('action_by_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('cost_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['action_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_index(op.f('ix_drugs_history_history_id'), 'drugs_history', ['history_id'], unique=False)
    op.create_index(op.f('ix_drugs_history_id'), 'drugs_history', ['id'], unique=False)
    op.create_table('prescription_details_history',
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=10), nullable=False),
    sa.Column('action_timestamp', sa.DateTime(), nullable=False),
    sa.Column('action_by_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('dosage', sa.String(length=100), nullable=True),
    sa.Column('frequency', sa.String(length=100), nullable=True),
    sa.Column('days', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('prescription_id', sa.Integer(), nullable=True),
    sa.Column('drug_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['action_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_index(op.f('ix_prescription_details_history_history_id'), 'prescription_details_history', ['history_id'], unique=False)
    op.create_index(op.f('ix_prescription_details_history_id'), 'prescription_details_history', ['id'], unique=False)
    op.create_table('prescriptions_history',
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=10), nullable=False),
    sa.Column('action_timestamp', sa.DateTime(), nullable=False),
    sa.Column('action_by_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('prescription_date', sa.DateTime(), nullable=True),
    sa.Column('dispensing_status', sa.String(length=50), nullable=True),
    sa.Column('medical_record_id', sa.Integer(), nullable=True),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['action_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_index(op.f('ix_prescriptions_history_history_id'), 'prescriptions_history', ['history_id'], unique=False)
    op.create_index(op.f('ix_prescriptions_history_id'), 'prescriptions_history', ['id'], unique=False)
    op.create_table('drugs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('cost_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['drug_categories.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_drugs_id'), 'drugs', ['id'], unique=False)
    op.create_index(op.f('ix_drugs_name'), 'drugs', ['name'], unique=False)
    op.create_table('inventory_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_time', sa.DateTime(), nullable=False),
    sa.Column('transaction_type', sa.Enum('STOCK_IN', 'DISPENSE', 'ADJUSTMENT', 'INITIAL', name='inventorytransactiontype'), nullable=False),
    sa.Column('quantity_change', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('action_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['action_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inventory_transactions_id'), 'inventory_transactions', ['id'], unique=False)
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prescription_date', sa.DateTime(), nullable=False),
    sa.Column('dispensing_status', sa.Enum('PENDING', 'DISPENSED', 'CANCELLED', name='dispensingstatus'), nullable=False),
    sa.Column('medical_record_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['medical_record_id'], ['medical_records.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('medical_record_id')
    )
    op.create_index(op.f('ix_prescriptions_id'), 'prescriptions', ['id'], unique=False)
    op.create_table('prescription_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dosage', sa.String(length=100), nullable=True),
    sa.Column('frequency', sa.String(length=100), nullable=True),
    sa.Column('days', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prescription_details_id'), 'prescription_details', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_prescription_details_id'), table_name='prescription_details')
    op.drop_table('prescription_details')
    op.drop_index(op.f('ix_prescriptions_id'), table_name='prescriptions')
    op.drop_table('prescriptions')
    op.drop_index(op.f('ix_inventory_transactions_id'), table_name='inventory_transactions')
    op.drop_table('inventory_transactions')
    op.drop_index(op.f('ix_drugs_name'), table_name='drugs')
    op.drop_index(op.f('ix_drugs_id'), table_name='drugs')
    op.drop_table('drugs')
    op.drop_index(op.f('ix_prescriptions_history_id'), table_name='prescriptions_history')
    op.drop_index(op.f('ix_prescriptions_history_history_id'), table_name='prescriptions_history')
    op.drop_table('prescriptions_history')
    op.drop_index(op.f('ix_prescription_details_history_id'), table_name='prescription_details_history')
    op.drop_index(op.f('ix_prescription_details_history_history_id'), table_name='prescription_details_history')
    op.drop_table('prescription_details_history')
    op.drop_index(op.f('ix_drugs_history_id'), table_name='drugs_history')
    op.drop_index(op.f('ix_drugs_history_history_id'), table_name='drugs_history')
    op.drop_table('drugs_history')
    op.drop_index(op.f('ix_drug_categories_history_id'), table_name='drug_categories_history')
    op.drop_index(op.f('ix_drug_categories_history_history_id'), table_name='drug_categories_history')
    op.drop_table('drug_categories_history')
    op.drop_index(op.f('ix_drug_categories_id'), table_name='drug_categories')
    op.drop_table('drug_categories')
    # ### end Alembic commands ###
